{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/contacts/AddContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","style","backgroundColor","href","branding","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","name","email","phone","dispatch","setState","inherits","createClass","key","value","children","Component","Consumer","Contact","onDeleteClick","showContactInfo","e","_this2","_this$contact","onClick","onShowClick","bind","cursor","float","color","Contacts","Fragment","map","contacts_Contact","AddContact","onChange","defineProperty","target","onSubmit","preventDefault","console","log","_this$state","htmlFor","placeholder","App","context_Provider","layout_Header","contacts_AddContact","contacts_Contacts","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e628fc63.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = props => {\r\n  const styles = {\r\n    backgroundColor: \"#563d7c\"\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className=\"navbar navbar-expand-sm navbar-dark mb-3 py-0\"\r\n      style={styles}\r\n    >\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {props.branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <a href=\"/\" className=\"nav-link\">\r\n                Home\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My app\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        name: \"Daniel Ko\",\r\n        email: \"danielko@gamil.com\",\r\n        phone: \"+380999999999\"\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Henry Johnson\",\r\n        email: \"henryjonhson@gamil.com\",\r\n        phone: \"555-555-5555\"\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Karen Williams\",\r\n        email: \"rarenwi@gamil.com\",\r\n        phone: \"333-333-3333\"\r\n      }\r\n    ],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contact extends Component {\r\n  static propTypes = {\r\n    //typization of props\r\n    contact: PropTypes.object.isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    //init component\r\n    super(props);\r\n    this.contact = props.contact;\r\n    this.state = {\r\n      showContactInfo: false\r\n    };\r\n  }\r\n\r\n  onDeleteClick = (id, dispatch) => {\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  onShowClick(e) {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  }\r\n\r\n  render() {\r\n    const { showContactInfo } = this.state;\r\n    const { id, name, email, phone } = this.contact;\r\n\r\n    //render jsx\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body p-2 mb-3\">\r\n              <h6>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={this.onShowClick.bind(this)}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n              </h6>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React, { Component } from \"react\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\"\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n    return (\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Add Contact</div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter name...\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={this.onChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter email...\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={this.onChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"phone\">Phone</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter phone...\"\r\n                name=\"phone\"\r\n                value={phone}\r\n                onChange={this.onChange}\r\n              />\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Add Contact\"\r\n              className=\"btn btn-light btn-block\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from \"react\";\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <AddContact />\n            <Contacts />\n          </div>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}