{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","style","backgroundColor","href","branding","react_router_dom","to","defaultProps","About","NotFound","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","name","email","phone","dispatch","setState","inherits","createClass","key","value","children","Component","Consumer","Contact","onDeleteClick","showContactInfo","e","_this2","_this$contact","onClick","onShowClick","bind","cursor","float","color","Contacts","Fragment","map","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","preventDefault","_this$state","uuid","history","push","_this$state2","layout_TextInputGroup","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2cc5ae62.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const styles = {\r\n    backgroundColor: \"#563d7c\"\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className=\"navbar navbar-expand-sm navbar-dark mb-3 py-0\"\r\n      style={styles}\r\n    >\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {props.branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My app\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About contact manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        name: \"Daniel Ko\",\r\n        email: \"danielko@gamil.com\",\r\n        phone: \"+380999999999\"\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Henry Johnson\",\r\n        email: \"henryjonhson@gamil.com\",\r\n        phone: \"555-555-5555\"\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Karen Williams\",\r\n        email: \"rarenwi@gamil.com\",\r\n        phone: \"333-333-3333\"\r\n      }\r\n    ],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contact extends Component {\r\n  static propTypes = {\r\n    //typization of props\r\n    contact: PropTypes.object.isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    //init component\r\n    super(props);\r\n    this.contact = props.contact;\r\n    this.state = {\r\n      showContactInfo: false\r\n    };\r\n  }\r\n\r\n  onDeleteClick = (id, dispatch) => {\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  onShowClick(e) {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  }\r\n\r\n  render() {\r\n    const { showContactInfo } = this.state;\r\n    const { id, name, email, phone } = this.contact;\r\n\r\n    //render jsx\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body p-2 mb-3\">\r\n              <h6>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={this.onShowClick.bind(this)}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n              </h6>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-7 mb-3\">\r\n                <span style={{ color: \"#123C69\" }}>Contact </span>list\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames(\"form-control\", { \"is-invalid\": error })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport uuid from \"uuid\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for errors\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          name: \"Name is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          email: \"Email is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          phone: \"Phone is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      id: uuid(),\r\n      name: name,\r\n      email: email,\r\n      phone: phone\r\n    };\r\n    dispatch({ type: \"ADD_CONTACT\", payload: newContact });\r\n\r\n    //clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter email...\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from \"react\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                {/* for passing params to route, use :paramName and in component you can call props.match.prams.paramName */}\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}