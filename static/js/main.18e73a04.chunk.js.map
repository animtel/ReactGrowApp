{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","style","backgroundColor","react_router_dom","to","branding","defaultProps","About","NotFound","Context","React","createContext","DataUrl","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","onDeleteClick","_ref","delete","t0","_x","_x2","showContactInfo","e","_this2","_this$contact","name","email","phone","onClick","onShowClick","bind","cursor","float","color","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","resp","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.18e73a04.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const styles = {\r\n    backgroundColor: \"#563d7c\"\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className=\"navbar navbar-expand-sm navbar-dark mb-3 py-0\"\r\n      style={styles}\r\n    >\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {props.branding}\r\n        </Link>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My app\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About contact manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\nexport const DataUrl = \"https://jsonplaceholder.typicode.com/users/\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(DataUrl);\r\n\r\n    this.setState({\r\n      contacts: res.data\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer, DataUrl } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  static propTypes = {\r\n    //typization of props\r\n    contact: PropTypes.object.isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    //init component\r\n    super(props);\r\n    this.contact = props.contact;\r\n    this.state = {\r\n      showContactInfo: false\r\n    };\r\n  }\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(DataUrl + id);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n\r\n  onShowClick(e) {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  }\r\n\r\n  render() {\r\n    const { showContactInfo } = this.state;\r\n    const { id, name, email, phone } = this.contact;\r\n\r\n    //render jsx\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body p-2 mb-3\">\r\n              <h6>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={this.onShowClick.bind(this)}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h6>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-7 mb-3\">\r\n                <span style={{ color: \"#123C69\" }}>Contact </span>list\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames(\"form-control\", { \"is-invalid\": error })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer, DataUrl } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for errors\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          name: \"Name is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          email: \"Email is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          phone: \"Phone is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name: name,\r\n      email: email,\r\n      phone: phone\r\n    };\r\n\r\n    const resp = await axios.post(DataUrl, newContact);\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: resp.data });\r\n\r\n    //clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter email...\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer, DataUrl } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const resp = await axios.get(DataUrl + id);\r\n\r\n    const contact = resp.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for errors\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          name: \"Name is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          email: \"Email is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          phone: \"Phone is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name: name,\r\n      email: email,\r\n      phone: phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const resp = await axios.put(DataUrl + id, updContact);\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: resp.data });\r\n\r\n    //clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter email...\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                {/* for passing params to route, use :paramName and in component you can call props.match.prams.paramName */}\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}